// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace HPC.ACM.API.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TaskResult
    {
        /// <summary>
        /// Initializes a new instance of the TaskResult class.
        /// </summary>
        public TaskResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaskResult class.
        /// </summary>
        /// <param name="nodeName">The name of the node on which the task
        /// runs</param>
        /// <param name="commandLine">Available only for ClusRun task</param>
        /// <param name="taskRequeueCount">The number of times the task is
        /// requeued</param>
        public TaskResult(int? jobId = default(int?), int? taskId = default(int?), string nodeName = default(string), string commandLine = default(string), bool? exited = default(bool?), int? exitCode = default(int?), string resultKey = default(string), int? taskRequeueCount = default(int?), string message = default(string), string filteredResult = default(string), int? numberOfProcesses = default(int?), string processIds = default(string), long? kernelProcessorTime = default(long?), long? userProcessorTime = default(long?), int? workingSet = default(int?), bool? primaryTask = default(bool?))
        {
            JobId = jobId;
            TaskId = taskId;
            NodeName = nodeName;
            CommandLine = commandLine;
            Exited = exited;
            ExitCode = exitCode;
            ResultKey = resultKey;
            TaskRequeueCount = taskRequeueCount;
            Message = message;
            FilteredResult = filteredResult;
            NumberOfProcesses = numberOfProcesses;
            ProcessIds = processIds;
            KernelProcessorTime = kernelProcessorTime;
            UserProcessorTime = userProcessorTime;
            WorkingSet = workingSet;
            PrimaryTask = primaryTask;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jobId")]
        public int? JobId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taskId")]
        public int? TaskId { get; set; }

        /// <summary>
        /// Gets or sets the name of the node on which the task runs
        /// </summary>
        [JsonProperty(PropertyName = "nodeName")]
        public string NodeName { get; set; }

        /// <summary>
        /// Gets or sets available only for ClusRun task
        /// </summary>
        [JsonProperty(PropertyName = "commandLine")]
        public string CommandLine { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exited")]
        public bool? Exited { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exitCode")]
        public int? ExitCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resultKey")]
        public string ResultKey { get; set; }

        /// <summary>
        /// Gets or sets the number of times the task is requeued
        /// </summary>
        [JsonProperty(PropertyName = "taskRequeueCount")]
        public int? TaskRequeueCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "filteredResult")]
        public string FilteredResult { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numberOfProcesses")]
        public int? NumberOfProcesses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processIds")]
        public string ProcessIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kernelProcessorTime")]
        public long? KernelProcessorTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userProcessorTime")]
        public long? UserProcessorTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "workingSet")]
        public int? WorkingSet { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "primaryTask")]
        public bool? PrimaryTask { get; set; }

    }
}
